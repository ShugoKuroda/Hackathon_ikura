//-----------------------------------------------------------------------------------------------
//
// 背景の処理[bg.cpp]
// Author : SHUGO kURODA
//
//-----------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------
// インクルードファイル
//-----------------------------------------------------------------------------------------------
#include "gaugeframe.h"

#include "manager.h"
#include "renderer.h"
#include "object.h"
#include "object2D.h"
#include "input_keyboard.h"

#include "game.h"
#include "cloud.h"

//-----------------------------------------------------------------------------------------------
// マクロ定義
//-----------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------
// 静的メンバ変数
//-----------------------------------------------------------------------------------------------
// テクスチャのポインタ
LPDIRECT3DTEXTURE9 CGaugeFrame::m_apTexture = {};

//-----------------------------------------------------------------------------------------------
//	コンストラクタ
//-----------------------------------------------------------------------------------------------
CGaugeFrame::CGaugeFrame()
{
	//オブジェクトの種類設定
	SetObjType(EObject::OBJ_BG_MOVE);
}

//-----------------------------------------------------------------------------------------------
// デストラクタ
//-----------------------------------------------------------------------------------------------
CGaugeFrame::~CGaugeFrame()
{

}

//-----------------------------------------------------------------------------------------------
//	テクスチャ読み込み
//-----------------------------------------------------------------------------------------------
HRESULT CGaugeFrame::Load()
{
	// デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

	// テクスチャの読み込み
	D3DXCreateTextureFromFile(pDevice, "data/TEXTURE/gaugeFrame000.png", &m_apTexture);			// 空
	return S_OK;
}

//-----------------------------------------------------------------------------------------------
//	テクスチャ破棄
//-----------------------------------------------------------------------------------------------
void CGaugeFrame::Unload()
{
	// テクスチャの破棄
	if (m_apTexture != nullptr)
	{
		m_apTexture->Release();
		m_apTexture = nullptr;
	}
}

//-----------------------------------------------------------------------------------------------
//	生成処理
//-----------------------------------------------------------------------------------------------
CGaugeFrame *CGaugeFrame::Create(const D3DXVECTOR3& pos, const D3DXVECTOR3& scale)
{
	// ポインタクラスを宣言
	CGaugeFrame* pGaugeFrame = new CGaugeFrame;

	if (pGaugeFrame != nullptr)
	{
		pGaugeFrame->m_pos = pos;
		pGaugeFrame->m_scale = scale;
		// 初期化
		pGaugeFrame->Init();
	}

	return pGaugeFrame;
}

//-----------------------------------------------------------------------------------------------
//	初期化
//-----------------------------------------------------------------------------------------------
HRESULT CGaugeFrame::Init()
{
	//=============================================================================
	// そら
	//=============================================================================
	//スクリーンサイズの保存
	D3DXVECTOR2 ScreenSize = D3DXVECTOR2((float)CRenderer::SCREEN_WIDTH, (float)CRenderer::SCREEN_HEIGHT);
	// 生成
	m_apGaugeFrame = new CObject2D;
	//オブジェクトの種類設定
	m_apGaugeFrame->SetObjType(EObject::OBJ_EFFECT);

	m_apGaugeFrame->SetPosition(m_pos);
	m_apGaugeFrame->SetSize(D3DXVECTOR2(m_scale.x*1.05f, m_scale.y*2.3f));

	m_apGaugeFrame->Init();
	m_apGaugeFrame->BindTexture(m_apTexture);

	return S_OK;
}

//-----------------------------------------------------------------------------------------------
//	終了
//-----------------------------------------------------------------------------------------------
void CGaugeFrame::Uninit()
{
	if (m_apGaugeFrame != nullptr)
	{
		m_apGaugeFrame->Uninit();
		m_apGaugeFrame = nullptr;
	}
	Release();
}

//-----------------------------------------------------------------------------------------------
//	更新
//-----------------------------------------------------------------------------------------------
void CGaugeFrame::Update()
{
}

//-----------------------------------------------------------------------------------------------
//	描画
//-----------------------------------------------------------------------------------------------
void CGaugeFrame::Draw()
{

}

void CGaugeFrame::SetCol(D3DXCOLOR col)
{
	if (m_apGaugeFrame)
	{
		m_apGaugeFrame->SetColor(col);
	}
}
